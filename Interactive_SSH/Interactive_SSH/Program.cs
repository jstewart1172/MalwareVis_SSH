using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Renci.SshNet;


namespace Interactive_SSH
{
    class SSH
    {
        private static byte[] _data = new byte[2048];
        private static ShellStream stream;
        private static SshClient client;

        static void Main(string[] args)
        {
            client = new SshClient("130.18.14.67", "", "");
            client.Connect();
            stream = client.CreateShellStream(@"xterm", 80, 24, 800, 600, 2048);
            string cmd = "";

            //flush buffer
           stream.Flush();
           while(true)
           {
               stream.DataReceived += StartAsyncRead;
               cmd = Console.ReadLine();
               stream.WriteLine(cmd);
           }

           
        }

        private static void StartAsyncRead(object sender, EventArgs e)
        {
            try
            {
                stream.BeginRead(_data, 0, _data.Length, OnReadCompletion, new MyAsyncInfo(_data, stream));
            }
            catch (Exception exception)
            {
                Console.WriteLine(exception);
            }
        }
    
        private static void OnReadCompletion(IAsyncResult ar)
        {
            try
            {
                var mai = (MyAsyncInfo)ar.AsyncState;
                int datalen = mai.Stream.EndRead(ar);
                string line = client.ConnectionInfo.Encoding.GetString(mai.ByteArray, 0, datalen);
                Console.Write(line);
            }
            catch (Exception exception)
            {
                Console.WriteLine(exception);
            }
        }


        public class MyAsyncInfo
        {
            public MyAsyncInfo(Byte[] array, ShellStream stream)
            {
                ByteArray = array;
                Stream = stream;
            }
    
            public Byte[] ByteArray { get; set; }
            public ShellStream Stream { get; set; }
        }
    }
}
